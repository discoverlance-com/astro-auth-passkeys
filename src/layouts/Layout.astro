---
interface Props {
  title: string;
}

const { title } = Astro.props;

import { ArrowRight, Key, Lock, Rocket } from "lucide-react";
import "@/styles/base.css";
import { ViewTransitions } from "astro:transitions";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Welcome to astro authentication made easy."
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions transition:animate="slide" />
  </head>
  <body class="antialiased relative scroll-smooth">
    <div class="flex flex-col min-h-svh">
      <header class="px-4 lg:px-6 h-14 flex items-center">
        <a href="/" class="flex items-center justify-center">
          <Rocket size="24" />
          <span class="ml-2 text-lg font-semibold">Astro Passkey Auth</span>
        </a>
      </header>
      <slot />
      <footer class="py-6 w-full shrink-0 items-center px-4 md:px-6 border-t">
        <p class="text-xs text-gray-500 dark:text-gray-400 text-center">
          Â© 2024 Astro Passkey Auth. All rights reserved.
        </p>
      </footer>
    </div>
  </body>
</html>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }

  document.addEventListener("astro:after-swap", () => {
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");
  });
</script>
